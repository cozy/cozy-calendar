// Generated by CoffeeScript 1.6.3
var Alarm, User, americano, time;

americano = require('americano-cozy');

time = require('time');

User = require('./user');

module.exports = Alarm = americano.getModel('Alarm', {
  action: {
    type: String,
    "default": 'DISPLAY'
  },
  trigg: {
    type: String
  },
  description: {
    type: String
  },
  timezone: {
    type: String
  },
  timezoneHour: {
    type: String
  },
  rrule: {
    type: String
  },
  tags: {
    type: function(x) {
      return x;
    }
  },
  related: {
    type: String,
    "default": null
  }
});

require('cozy-ical').decorateAlarm(Alarm);

Alarm.all = function(params, callback) {
  return Alarm.request("all", params, callback);
};

Alarm.tags = function(callback) {
  return Alarm.rawRequest("tags", {
    group: true
  }, function(err, results) {
    var out, result, tag, type, _i, _len, _ref;
    if (err) {
      return callback(err);
    }
    out = {
      calendar: [],
      tag: []
    };
    for (_i = 0, _len = results.length; _i < _len; _i++) {
      result = results[_i];
      _ref = result.key, type = _ref[0], tag = _ref[1];
      out[type].push(tag);
    }
    return callback(null, out);
  });
};

Alarm.prototype.timezoned = function(timezone) {
  var timezonedDate;
  if (!this.trigg) {
    throw new Error("buggy alarm" + this.id);
  }
  if (timezone == null) {
    timezone = User.timezone;
  }
  timezonedDate = new time.Date(this.trigg, 'UTC');
  timezonedDate.setTimezone(timezone);
  if (this.timezone == null) {
    this.timezone = timezone;
  }
  this.trigg = timezonedDate.toString().slice(0, 24);
  return this;
};

Alarm.toUTC = function(attrs, timezone) {
  var hours, minutes, trigg, _ref;
  if (timezone == null) {
    timezone = User.timezone;
  }
  if (attrs.timezoneHour) {
    if (attrs.id) {
      trigg = new time.Date(attrs.trigg, User.timezone);
      trigg.setTimezone(attrs.timezone);
    } else {
      trigg = new time.Date(attrs.trigg, attrs.timezone);
    }
    _ref = attrs.timezoneHour.split(':'), hours = _ref[0], minutes = _ref[1];
    trigg.setHours(hours);
    trigg.setMinutes(minutes);
  } else {
    trigg = new time.Date(attrs.trigg, User.timezone);
    trigg.setTimezone(attrs.timezone);
  }
  attrs.timezoneHour = trigg.toString().slice(16, 21);
  trigg.setTimezone('UTC');
  attrs.trigg = trigg.toString().slice(0, 24);
  return attrs;
};
